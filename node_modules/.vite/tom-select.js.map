{
  "version": 3,
  "sources": ["../tom-select/src/contrib/microevent.ts", "../tom-select/src/contrib/microplugin.ts", "../tom-select/node_modules/@orchidjs/sifter/lib/diacritics.ts", "../tom-select/node_modules/@orchidjs/sifter/lib/utils.ts", "../tom-select/node_modules/@orchidjs/sifter/lib/sifter.ts", "../tom-select/src/vanilla.ts", "../tom-select/src/contrib/highlight.ts", "../tom-select/src/constants.ts", "../tom-select/src/defaults.ts", "../tom-select/src/utils.ts", "../tom-select/src/getSettings.ts", "../tom-select/src/tom-select.ts", "../tom-select/src/plugins/change_listener/plugin.ts", "../tom-select/src/plugins/checkbox_options/plugin.ts", "../tom-select/src/plugins/clear_button/plugin.ts", "../tom-select/src/plugins/drag_drop/plugin.ts", "../tom-select/src/plugins/dropdown_header/plugin.ts", "../tom-select/src/plugins/dropdown_input/plugin.ts", "../tom-select/src/plugins/input_autogrow/plugin.ts", "../tom-select/src/plugins/no_backspace_delete/plugin.ts", "../tom-select/src/plugins/no_active_items/plugin.ts", "../tom-select/src/plugins/optgroup_columns/plugin.ts", "../tom-select/src/plugins/remove_button/plugin.ts", "../tom-select/src/plugins/restore_on_backspace/plugin.ts", "../tom-select/src/plugins/virtual_scroll/plugin.ts", "dep:tom-select"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self, args );\n\t\t\t}\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\ntype TPluginItem = {name:string,options:{}};\ntype TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\"\u00A0\",\n\t0:\"\u07C0\",\n\tA:\"\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F\",\n\tAA:\"\uA732\",\n\tAE:\"\u00C6\u01FC\u01E2\",\n\tAO:\"\uA734\",\n\tAU:\"\uA736\",\n\tAV:\"\uA738\uA73A\",\n\tAY:\"\uA73C\",\n\tB:\"\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0181\",\n\tC:\"\u24B8\uFF23\uA73E\u1E08\u0106C\u0108\u010A\u010C\u00C7\u0187\u023B\",\n\tD:\"\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018A\u0189\u1D05\uA779\",\n\tDh:\"\u00D0\",\n\tDZ:\"\u01F1\u01C4\",\n\tDz:\"\u01F2\u01C5\",\n\tE:\"\u025B\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E\u1D07\",\n\tF:\"\uA77C\u24BB\uFF26\u1E1E\u0191\uA77B\",\n\tG:\"\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E\u0262\",\n\tH:\"\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D\",\n\tI:\"\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197\",\n\tJ:\"\u24BF\uFF2A\u0134\u0248\u0237\",\n\tK:\"\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2\",\n\tL:\"\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780\",\n\tLJ:\"\u01C7\",\n\tLj:\"\u01C8\",\n\tM:\"\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C\u03FB\",\n\tN:\"\uA7A4\u0220\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u019D\uA790\u1D0E\",\n\tNJ:\"\u01CA\",\n\tNj:\"\u01CB\",\n\tO:\"\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C\",\n\tOE:\"\u0152\",\n\tOI:\"\u01A2\",\n\tOO:\"\uA74E\",\n\tOU:\"\u0222\",\n\tP:\"\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754\",\n\tQ:\"\u24C6\uFF31\uA756\uA758\u024A\",\n\tR:\"\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782\",\n\tS:\"\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784\",\n\tT:\"\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786\",\n\tTh:\"\u00DE\",\n\tTZ:\"\uA728\",\n\tU:\"\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244\",\n\tV:\"\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245\",\n\tVY:\"\uA760\",\n\tW:\"\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72\",\n\tX:\"\u24CD\uFF38\u1E8A\u1E8C\",\n\tY:\"\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE\",\n\tZ:\"\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762\",\n\ta:\"\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251\",\n\taa:\"\uA733\",\n\tae:\"\u00E6\u01FD\u01E3\",\n\tao:\"\uA735\",\n\tau:\"\uA737\",\n\tav:\"\uA739\uA73B\",\n\tay:\"\uA73D\",\n\tb:\"\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253\u0182\",\n\tc:\"\uFF43\u24D2\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184\",\n\td:\"\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\u018B\u13E7\u0501\uA7AA\",\n\tdh:\"\u00F0\",\n\tdz:\"\u01F3\u01C6\",\n\te:\"\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u01DD\",\n\tf:\"\u24D5\uFF46\u1E1F\u0192\",\n\tff:\"\uFB00\",\n\tfi:\"\uFB01\",\n\tfl:\"\uFB02\",\n\tffi:\"\uFB03\",\n\tffl:\"\uFB04\",\n\tg:\"\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\uA77F\u1D79\",\n\th:\"\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265\",\n\thv:\"\u0195\",\n\ti:\"\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131\",\n\tj:\"\u24D9\uFF4A\u0135\u01F0\u0249\",\n\tk:\"\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3\",\n\tl:\"\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747\u026D\",\n\tlj:\"\u01C9\",\n\tm:\"\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F\",\n\tn:\"\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5\u043B\u0509\",\n\tnj:\"\u01CC\",\n\to:\"\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\uA74B\uA74D\u0275\u0254\u1D11\",\n\toe:\"\u0153\",\n\toi:\"\u01A3\",\n\too:\"\uA74F\",\n\tou:\"\u0223\",\n\tp:\"\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755\u03C1\",\n\tq:\"\u24E0\uFF51\u024B\uA757\uA759\",\n\tr:\"\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783\",\n\ts:\"\u24E2\uFF53\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B\u0282\",\n\tss:\"\u00DF\",\n\tt:\"\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787\",\n\tth:\"\u00FE\",\n\ttz:\"\uA729\",\n\tu:\"\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289\",\n\tv:\"\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C\",\n\tvy:\"\uA761\",\n\tw:\"\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73\",\n\tx:\"\u24E7\uFF58\u1E8B\u1E8D\",\n\ty:\"\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF\",\n\tz:\"\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nvar code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n    var result = char_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n        return accumulator;\n    }, accumulator);\n\n\tconsole.log(`char_codes (${result.length})`,result);\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\n\n\tvar latin_convert:{[key:string]:string} = {\n\t\t'l\u00B7': 'l',\n\t\t'\u02BCn': 'n',\n\t\t'\u00E6': 'ae',\n\t\t'\u00F8': 'o',\n\t\t'a\u02BE': 'a',\n\t\t'dz\u030C': 'dz',\n\t};\n\n\tvar diacritics:{[key:string]:string} = {};\n\t//var no_latin\t= [];\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\tlet diacritic\t= String.fromCharCode(i);\n\t\t\tlet latin\t\t= diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n\t\t\tif( latin == diacritic ){\n\t\t\t\t//no_latin.push(diacritic);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlatin = latin.toLowerCase();\n\n\t\t\tif( latin in latin_convert ){\n\t\t\t\tlatin = latin_convert[latin];\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = latin + latin.toUpperCase();\n\t\t\t}\n\t\t\tdiacritics[latin] += diacritic;\n\t\t}\n\t});\n\n\t//console.log('no_latin',JSON.stringify(no_latin));\n\n\treturn diacritics;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /a\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251A\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F/\n *\n */\nvar diacritics:null|TDiacraticList = null\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritics === null ){\n\t\tdiacritics = generateDiacritics();\n\t}\n\n\tfor( let latin in diacritics ){\n\t\tif( diacritics.hasOwnProperty(latin) ){\n\t\t\tregex = regex.replace( new RegExp(latin,'g'), '['+diacritics[latin]+']');\n\t\t}\n\t}\n\treturn regex;\n}\n\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /a\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251A\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n", "\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\nexport const escape_regex = (str:string):string => {\n\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "/**\n * sifter.js\n * Copyright (c) 2013\u20132020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints, asciifold } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(regex);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'i') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\tmultipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t} else if (sort_flds_count === 1) {\n\t\t\tconst sort_fld = sort_flds[0].field;\n\t\t\tconst multiplier = multipliers[0];\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(sort_fld, a),\n\t\t\t\t\tget_field(sort_fld, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\t\tfield = sort_flds[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:T.Options):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\t\tquery = asciifold( query + '' ).toLowerCase().trim();\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query,\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n", "\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, ''+val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/lib/sifter';\nimport { escape_regex } from '@orchidjs/sifter/lib/utils';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {[key:string]:{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\t\tvar self\t\t\t\t= this;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t/**\n\t\t * Create all elements and set up event bindings.\n\t\t *\n\t\t */\n\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\tappend( wrapper, control );\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tthis.control\t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t\tself.setup();\n\t}\n\n\t/**\n\t * @deprecated v1.7.6\n\t *\n\t */\n\tsetup(){}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= get_hash(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self._render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, groups[optgroup] );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, groups[optgroup] );\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\treturn this.rendered('option',hashed);\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tself.input.prepend(option_el);\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\toption_el.selected = true;\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tsetAttr(option_el,{selected:null});\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tfor( i = self.items.length-1; i >=0 ; i-- ){\n\t\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not([selected])`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.clearActiveItems();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t/**\n\t * _render() can be called directly when we know we don't want to hit the cache\n\t * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tvar value = '', id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:TomTemplateNames, value:null|string ):null|HTMLElement{\n\t\treturn value !== null && this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport getSettings from '../../getSettings.js';\nimport { TomSettings } from '../../types/index';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\tconst self\t\t= this;\n\tconst joined\t= (arr:string[]):string => arr.join(self.settings.delimiter);\n\n\taddEvent(self.input,'change',()=>{\n\n\t\tvar settings\t= getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings );\n\n\t\t// prevent infinite loops\n\t\tif( joined(self.items) == joined(settings.items) ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\t\tself.setValue(settings.items);\n\t});\n\n});\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('checkbox_options',function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input') as HTMLInputElement;\n\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}else{\n\t\t\t\tcheckbox.checked = false;\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n\n});\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nTomSelect.define('clear_button',function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\t\t\tself.clear();\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n});\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('drag_drop',function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n});\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nTomSelect.define('dropdown_header',function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n});\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input ) as HTMLInputElement;\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.on('initialize',()=>{\n\n\t\t// open/close dropdown when tabbing focus on wrapper\n\t\taddEvent(self.wrapper,'focus', (evt) => {\n\t\t\tself.onFocus(evt as MouseEvent)\n\t\t});\n\t\t\n\t\tconst setTabIndex = () => {\n\t\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\t\t};\n\t\t\n\t\tself.on('dropdown_close',setTabIndex);\n\t\tself.on('dropdown_open',() => setAttr(self.wrapper,{tabindex:'-1'}) );\n\t\tsetTabIndex();\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt) => {\n\n\t\t\tif( self.control.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch( (<KeyboardEvent>evt).keyCode ){\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('input_autogrow', function(this:TomSelect) {\n\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\tif( self.items.length > 0 ){\n\t\t\t\ttest_input.textContent\t= control.value;\n\t\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t\t}else{\n\t\t\t\tcontrol.style.width\t\t= '';\n\t\t\t}\n\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n});\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_active_items', function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n});\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nTomSelect.define('optgroup_columns', function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n});\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption } from '../../types/index';\nimport { RBOptions } from './types';\n\n\nTomSelect.define('remove_button',function(this:TomSelect, userOptions:RBOptions ){\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar rendered = getDom(orig_render_item.call(self, data, escape));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\n\nTomSelect.define('virtual_scroll',function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t\treturn;\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tfunction canLoadMore(query:string):boolean{\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t// set the next url that will be\n\tself.setNextUrl = function(value:string,next_url:any):void{\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = function(query:string):any{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl(query);\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions();\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ) option.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:function(){\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:function(){\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',function(){\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent < 0.95 ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n});\n", "import d from \"../node_modules/tom-select/dist/esm/tom-select.complete.js\";export default d;"],
  "mappings": "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",
  "names": []
}
