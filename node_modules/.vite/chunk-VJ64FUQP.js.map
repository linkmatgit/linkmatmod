{
  "version": 3,
  "sources": ["../preact/compat/src/util.js", "../preact/compat/src/PureComponent.js", "../preact/compat/src/memo.js", "../preact/compat/src/forwardRef.js", "../preact/compat/src/Children.js", "../preact/compat/src/suspense.js", "../preact/compat/src/suspense-list.js", "../preact/compat/src/portals.js", "../preact/compat/src/render.js", "../preact/compat/src/index.js"],
  "sourcesContent": ["/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\t// We always have ref in props.ref, except for\n\t// mobx-react. It will call this function directly\n\t// and always pass ref as the second argument.\n\tfunction Forwarded(props, ref) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\tref = props.ref || ref;\n\t\treturn fn(\n\t\t\tclone,\n\t\t\t!ref || (typeof ref === 'object' && !('current' in ref)) ? null : ref\n\t\t);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { _vnode: vnode, _container: container });\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\t}\n\n\tif (type && props.class != props.className) {\n\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional arugment that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n"],
  "mappings": "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",
  "names": []
}
