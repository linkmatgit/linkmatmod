security:
    password_hashers:
        App\Entity\Auth\User:
            algorithm: auto

    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Auth\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Infrastructure\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /
                samesite: strict
            #access_denied_handler: App\Http\Security\AccessDeniedHandle
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            #switch_user: true
            switch_user: { role: CAN_SWITCH_USER, parameter: _ninja }
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_FONDATEUR: [ROLE_USER, ROLE_MANAGER ROLE_ADMIN, CAN_SWITCH_USER]
        ROLE_ADMIN: [ ROLE_USER, ROLE_MANAGER, ROLE_ADMIN]
        ROLE_COMMUNITY: [ROLE_USER, ROLE_MANAGER, ROLE_ADMIN]
        ROLE_MANAGER: [ ROLE_USER, ROLE_MANAGER]
        ROLE_VERIFIE: [ ROLE_USER, ROLE_VERIFIE]
        ROLE_USER: [ROLE_USER]
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/admin/users, roles: ROLE_FONDATEUR }
        - { path: ^/manager, roles: ROLE_MANAGER }
        # - { path: ^/profile, roles: ROLE_USER }
